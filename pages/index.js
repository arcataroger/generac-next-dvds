/* eslint-disable react/no-unescaped-entities */
import {useEffect, useState} from "react";
import {CardGroup, Col, Row} from "react-bootstrap";
import listOfDvds from "/data/dvds.json";
import DVDCard from "/components/DVDCard";
import CartItem from "/components/CartItem";
import Head from 'next/head'
import Image from 'next/image'
import CartTotal from "../components/CartTotal";

const debug = true;

export default function Home({dvdsWithMoreInfo}) {
    // Store a set of UUIDs that have been selected by the user.
    // Since the selected UUIDs will be a subset of available UUIDs, this helps limit var size
    const [cart, setCart] = useState(new Set());
    const [dvdsInCart, setDvdsInCart] = useState([])

    function toggleCartByUUID(uuid) {
        if (debug) console.log(`Toggling selected state of ${uuid}`);

        if (cart.has(uuid)) {
            setCart((prev) => {
                // Counter-intuitively, Set.delete() returns true instead of the modified Set.
                const newSet = new Set(prev);
                newSet.delete(uuid);
                return newSet;
            });
        } else {
            // However, Set.add() DOES return the modified Set.
            setCart((prev) => new Set(prev).add(uuid));
        }
    }

    useEffect(() => {
        console.log({cart});
        setDvdsInCart([...cart].map(uuid => listOfDvds.find(el => el.uuid === uuid)))
    }, [cart]);


    return (
        <>
            <Head>
                <title>David's DVDs</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.png"/>
            </Head>

            <main>
                <div className="container">
                    <h1>David's DVDs</h1>
                    <p>Hi. I'm David, and I've got quite the collection of DVDs for sale.</p>

                    <h2>Available DVDs</h2>
                    <div className="dvdCardContainer">

                        <Row xs={2} sm={3} md={5}>
                            {dvdsWithMoreInfo.map((dvd) => (
                                <Col key={dvd.uuid} className={'mb-4'}>
                                    <DVDCard
                                        dvdData={dvd}
                                        isInCart={cart.has(dvd.uuid)}
                                        clickHandler={() => toggleCartByUUID(dvd.uuid)}
                                    />
                                </Col>
                            ))}

                        </Row>
                    </div>

                    <h2>Your shopping cart</h2>
                    {dvdsInCart && dvdsInCart.length
                        ? <>
                            {dvdsInCart.map(dvd => <CartItem key={dvd.uuid} dvdData={dvd} clickHandler={() => toggleCartByUUID(dvd.uuid)}/>)}
                            <CartTotal dvdsInCart={dvdsInCart}/>
                        </>
                        : 'Your cart is currently empty.'
                    }

                </div>
            </main>

            <footer>
                <div className="container mt-5">
                    <p>Movie metadata and images courtesy of <a href={"https://www.themoviedb.org/"}>The Movie Database
                        (TMDB)</a></p>
                </div>
            </footer>
        </>
    )
}

export async function getStaticProps() {

    let dvdsWithMoreInfo = listOfDvds;
    try {
        dvdsWithMoreInfo = await Promise.all(
            listOfDvds.map(async (dvd) => {
                const resp = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=d7c1e35e5cac2d9d842a77c6c64fa055&language=en-US&query=${encodeURIComponent(dvd.title)}&primary_release_year=${dvd.releaseYear}`)
                const data = await resp.json()
                return {...dvd, apiData: data.results[0]}
            })
        )

        dvdsWithMoreInfo.forEach((dvd, k) => {

            const {poster_path, overview} = dvd.apiData

            dvdsWithMoreInfo[k].image = poster_path
                ? `https://image.tmdb.org/t/p/w500${poster_path}`
                : 'http://placehold.it/500x750'

            dvdsWithMoreInfo[k].description = overview ?? '';
        })
    } catch (err) {
        console.error(`API fetching failed: ${err}. `)
    }

    if (debug) console.log({dvdsWithMoreInfo})

    return {
        props: {
            dvdsWithMoreInfo
        }, // will be passed to the page component as props
    }
}
